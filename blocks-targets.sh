#!/bin/sh

blocks="BLOCKS-targets"

rm -f $blocks

if test "$1" = "clean"
then
  exit
fi

echo >$blocks "# This file is automatically generated."
echo >>$blocks "unload * * 1000-*"

expand TARGETS |
sed '
  s/#.*//
  s/  *$//
  s/^  *//
  /^$/d
' |
while read priority precedence repeats programidentifier blockidentifier visitidentifier alpha delta exposurerepeats exposuretime filters visitname
do
  programname=$(
    awk -v key=$programidentifier '
      $1 == key { 
        for (i = 2; i <= NF; ++i) 
          printf("%s ", $i); 
        printf("\n");
      }
    ' NAMES
  )
  blockname=$(
    awk -v key=$programidentifier/$blockidentifier '
      $1 == key {
        for (i = 2; i <= NF; ++i) 
          printf("%s ", $i); 
        printf("\n");
      }
    ' NAMES
  )
  estimatedduration=$(
    awk -v exposurerepeats=$exposurerepeats -v exposuretime=$exposuretime -v filters=$filters '
      BEGIN {
        if (filters == "g/r" || filters == "g/i" || filters == "r/i" || filters == "g/r/z" || filters == "g/i/z" || filters == "r/i/z") {
          nfilters = 2;
        } else if (filters == "g/r/i" || filters == "g/r/i/z" || filters == "g/r/i/z/y") {
          nfilters = 3;
        } else {
          nfilters = 1;
        }
        seconds = 30 + nfilters * exposurerepeats * (exposuretime + 10);
        print seconds;
      }
    '
  )
  cat <<EOF >$programidentifier-$blockidentifier-$visitidentifier.json
// This file is automatically generated.
{
  "project": {
    "identifier": "$programidentifier",
    "name": "$programname"
  },
  "identifier": "$blockidentifier",
  "name": "$blockname",
  "priority": "$priority",
  "visits": [
    {
      "identifier": "$visitidentifier",
      "name": "$visitname",
      "targetcoordinates": {
        "type"   : "equatorial",
        "alpha"  : "$alpha",
        "delta"  : "$delta",
        "equinox": "2000"
      },
      "command": "dithervisit $exposurerepeats $exposuretime $filters",
      "estimatedduration": "2100"
    }
  ],
  "constraints": {
    "maxskybrightness": "astronomicaltwilight",
    "maxairmass": "2.0",
    "minmoondistance": "15d"
  },
  "estimatedduration": "$estimatedduration"
  "persistent": "false"
}
EOF
  echo >>$blocks "load $precedence $repeats $programidentifier-$blockidentifier-$visitidentifier"
done 
